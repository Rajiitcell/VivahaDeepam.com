@model IEnumerable<Matrimony.Models.Profile>

@{
    ViewBag.Title = "Matches";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            margin-top: -10px;
        }

        .container {
            max-width: 100%;
        }

        .profile-card {
            width: 80%;
            max-width: 800px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
            margin: 15px auto;
            height: 350px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

            .profile-card img,
            .profile-card .default-profile-icon {
                width: 200px;
                height: 200px;
                object-fit: cover;
                border-radius: 50%;
                margin-bottom: 15px;
                border: 3px solid #ccc;
                margin-top: 30px;
                margin-left: 60px;
            }

            .profile-card h4 {
                font-size: 1.5rem;
                color: #333;
                margin-top: -240px;
                margin-left: 100px;
            }

            .profile-card p {
                font-size: 1rem;
                color: #777;
                margin-left: 100px;
            }

        .buttons {
            margin-top: 15px;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
        }

        .btn {
            width: 130px;
            padding: 10px;
            border-radius: 25px;
            font-size: 0.9rem;
        }

        .btn-success {
            background-color: orangered;
            color: white;
            border: none;
            margin-left:100px;
        }

            .btn-success:hover {
                background-color: orangered;
            }

        .btn-danger {
            background-color: dimgray;
            color: white;
            border: none;
        }

            .btn-danger:hover {
                background-color: dimgray;
            }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
            border: none;
        }

        .match-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .default-profile-icon {
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 3rem;
            background-color: #ddd;
            color: #555;
        }

        .btn i {
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="text-center mb-4">Matches</h2>
        <div class="match-container">
            @foreach (var profile in Model)
            {
                <div class="profile-card">
                    @if (profile.ProfileImage != null)
                    {
                        <img src="data:image/jpeg;base64,@profile.ProfileImageBase64" alt="Profile Image" />
                    }
                    else
                    {
                        <div class="default-profile-icon">
                            <i class="fas fa-user"></i>
                        </div>
                    }
                    <h4>@profile.FirstName @profile.LastName</h4>
                    <p><strong>Occupation:</strong> @profile.Occupation</p>
                    <p><strong>Location:</strong> @profile.Location</p>
                    <p><strong>Gender:</strong> @profile.Gender</p>

                    <div class="buttons">
                        @if (profile.InterestStatus == "Requested")
                        {
                            <button class="btn btn-secondary" style="margin-left:100px;" disabled>Requested</button>
                        }
                        else if (profile.InterestStatus == "Accepted")
                        {
                            <button class="btn btn-success" style="background-color:green;margin-left:100px;" disabled>Accepted</button>
                        }
                        else if (profile.InterestStatus == "Rejected")
                        {
                            <button class="btn btn-danger" style="background-color:red;margin-left:100px;" disabled>Rejected</button>
                        }
                        else
                        {
                            <form id="interestForm-@profile.Id" method="post" action="@Url.Action("SendInterest", "Home")" class="sendInterestForm">
                                <input type="hidden" name="ProfileId" value="@profile.Id" />
                                <input type="hidden" name="interestType" value="Send Interest" />
                                <button type="submit" class="btn btn-success"><i class="fas fa-check"></i>Send Interest</button>
                            </form>
                        }

                        @if (profile.InterestStatus != "Requested" && profile.InterestStatus != "Accepted" && profile.InterestStatus != "Rejected")
                        {
                            <a href="@Url.Action("CancelInterest", "Home", new { profileId = profile.Id })">
                                <button class="btn btn-danger"> <i class="fas fa-times"></i> Cancel</button>
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Success Modal -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="successModalLabel">Success!</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalMessage">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Modal -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Error!</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="errorMessage">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>
    <script>
        document.querySelectorAll('.sendInterestForm').forEach(function (form) {
            form.addEventListener('submit', function (event) {
                event.preventDefault();

                var formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById('modalMessage').innerText = data.message;
                            var successModal = new bootstrap.Modal(document.getElementById('successModal'));
                            successModal.show();
                        } else {
                            document.getElementById('errorMessage').innerText = data.message;
                            var errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
                            errorModal.show();
                        }
                    })
                    .catch(error => {
                        document.getElementById('errorMessage').innerText = "An error occurred. Please try again.";
                        var errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
                        errorModal.show();
                    });
            });
        });

        document.getElementById('successModal')?.addEventListener('hidden.bs.modal', function () {
            location.reload();
        });

        document.getElementById('errorModal')?.addEventListener('hidden.bs.modal', function () {
            location.reload();
        });
    </script>

</body>
</html>
